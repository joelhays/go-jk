<html>
<head>
   <title>JediKnight Unofficial Specs</title>
   <meta name="DL" content="cog">
</head>
<body text="#000000" bgcolor="#FFFFFF" link="#0000EE" vlink="#551A8B" alink="#FF0000">
<h1>Cog Files</h1>
<HR SIZE=2 WIDTH=70%>
<P>
<A NAME="c_gen"></A>
<STRONG><FONT SIZE="+1">Cog Symbol Example</FONT></STRONG>
<P>
<P>
<HR SIZE=2 WIDTH=200 Align=left>
<P> 
We`ll show the actual interconnections between all these files so far and the "<B>Symbols</B>" section of a cog . This might help if you have the complete files to look at.
<P>
For the cog example the file "<B>09_pipedoor_a.cog</B>" will be used.
<P>
Along with the matching jkl file "<B>09_fuelstation.jkl</B>" 
<P>
First thing to find  in the Jkl is the <B>Section :Cogs</B> then look for <B>09_pipedoor_a.cog</B>. We have shown two more here. 
<P>
<TABLE BORDER=3 BGCOLOR="#C0C0C0"CELLPADDING=5>
<TR><TD><PRE>
<FONT COLOR="#FF0000">13:	09_pipedoor_a.cog	9542 9536 3915 3412 33 14 15 368 12.000000 3.920000</FONT> 
14:	09_pipedoor_b.cog	9548 9554 3937 3952 34 13 15 370 12.000000 3.920000 
15:	09_pipedoor_c.cog	9560 9566 4108 35 13 14 374 12.000000 3.920000 
</PRE></TD></TR></TABLE>
<P>

<B>Line 13:</B> is the one to look at for now, the numbers that follow 09_pipedoor_a.cog are the "<B>values or references</B>" that will be passed to the symbols section in 09_pipedoor.cog.
<P>
If you notice the line above is marked in RED , the same is done in the symbols  , so you can see what it recieving these values or references. The "<B>Sections:</B>" refered to  below can all be found in the <B>JKL</B> file. Following this table , each symbol assignment will be explained in more deatil.  
<P>
<TABLE BORDER=3 BGCOLOR="#C0C0C0"CELLPADDING=5>
<TR><TD><PRE>
<B>09_pipedoor_a.cog</B>

<B>symbols</B>

<FONT COLOR="#008000">message	startup
message	activate    ( <B>Messages sent by the system </B>)
message	arrived
message	timer
message	user0	    ( <B>User defined messages </B>)
message	user1					
message	user2</FONT>

surface	socket0                 linkid=0 <FONT COLOR="#FF0000">surface # 9542 from Section: GeoResources/World Surfaces list</FONT>
surface	socket1                 linkid=1 <FONT COLOR="#FF0000">surface # 9536</FONT>
surface	socketind1              linkid=3 <FONT COLOR="#FF0000">surface # 3915</FONT>
surface	doorswitch              nolink <FONT COLOR="#FF0000">surface # 3412</FONT>
            
thing	door                    linkid=10 <FONT COLOR="#FF0000">Thing #33 from World Things list</FONT>

cog     pipedoorb                nolink <FONT COLOR="#FF0000">cog # 14 from Section : Cogs</FONT>
cog     pipedoorc                nolink <FONT COLOR="#FF0000">cog # 15 from Section : Cogs</FONT>

sound	klaxon=00alarmloop01.wav local

sector	doorsector               nolink <FONT COLOR="#FF0000">sector # 368 from  SECTION: SECTORS</FONT>

int     doorpos=0                local		
int     closed=1                 local		
int     i=-1                     local		
int     alarm=-1                 local		
int     alarming=0               local		

flex    movespeed=12 <FONT COLOR="#FF0000">( The value 12.000000 )</FONT>
flex    animtime=3.92 <FONT COLOR="#FF0000">( The value 3.920000 )</FONT>

<B>end</B>
</PRE></TD></TR></TABLE>
<P>
<HR SIZE=2 WIDTH=200 Align=left>
<P>
<A NAME="c_ex_symboluse"></A>
<B><FONT SIZE="+1">SymbolUse</FONT></B>
<P>
There is four symbol uses. And one used for descriptions. 
<UL>
<DT><B>desc</B>
<LI> Often seen as desc=colormap1 ,this is merely another form of commenting
</UL>
<UL>
<DT><B>local</B>
	<LI> This symbol assignment is local to this cog <B>ie:</B> the value assignment is not done externaly by something else.
</UL>
<UL>
 <DT><B>nolink</B>
 	<LI>The symbol will only be referenced  in the code by the name assigned in symbol section
 	<LI>The value of the symbol may be set by another list
 	<LI>Messages generated by this symbol reference will not be recieved by this cog
 	<LI>This cog may query the symbol for information
</UL>
<UL>
 <DT><B>linkid=10</B>
 	<LI>The symbol may be referenced by either the symbol name or the linkid number
 	<LI>The value of the symbol may be set by another list
 	<LI>Messages generated by this symbol reference will be recieved by this cog
 	<LI>This cog may query the symbol for information
</UL>
<UL>
 <DT><B>mask</B>
 <LI>Normaly messages are sent only by the player ,the mask  allows messages to be recieved by other things, the mask is attached to the sender item.
</UL>
<P>
<B>Masks see <A HREF="cog_flags.htm#thing_type_masks">Thing Masks</A></B>
<P>
<HR SIZE=2 WIDTH=200 Align=left>
<P>
<A NAME="c_ex_symbol"></A>
<B><FONT SIZE="+1">Symbols Explained</FONT></B>
<P>
The following is a more detailed account of the symbol assignments.
<p> 
<B>Surfaces</B>
 <P>
 In this assignment, the section :cog passed the reference # 9542 as the first parameter,
 In the code section when you see "socket0" or "linkid # 0" then this would be the actual surface ,that is being used. Because JediKnight is pure 3d in nature, a surface can be at almost any angle ,the closest thing you could call them would be ,floor,ceiling or wall.In JK they are simply called a surface.   
<P>
<TABLE BORDER=3 BGCOLOR="#C0C0C0"CELLPADDING=5>
<TR><TD><PRE>
surface	socket0                 linkid=0 <FONT COLOR="#FF0000">surface # 9542 from Section: GeoResources/World Surfaces list</FONT>

9542:	333	0x6		0x4		4	3	1	-1	0.50		4	8241,40	8242,37	8243,38	8244,23256	0.229572	0.405138	0.000000	0.012493	
(surface number 9542  in the JKl World Surfaces)
</PRE></TD></TR></TABLE>
<P>
<HR SIZE=2 WIDTH=200 Align=left>
<P>
<B>Thing</B>
<P>
The <B>thing</B> symbol assignment  is passed a reference number to a thing in the World things list.
To get to the real bottom of what this <B>Thing</B> is we need to also retrive the "<B>Template</B>" sewerdoor.(first two lines in world thing list is  name and template).
<P>
Now we can see this Thing is in fact a door 3do,but this is not the end of the trail. Sewerdoor is based on the template "<B>_walkstruct</B>", which is in turn based upon "<B>_structure</B>",which also has a base template "<B>_decor</B>" which finaly gets to the very start of it all and is based on the template "<B>none</B>".
<P>
None specifies the base template ,and every template after that may modify previously specified values,if a value is not modified it is passed on as it was. The one thing that must be watched for is flags, they do not get set to the new value ,but rather added to.
 In Jedi Knight doors and elevators are also 3do`s. The thing list basicly tells the engine where to move the 3do. The cog is probably just checking the position of the door before something else can happen.The template  in this case sets up all the parameters that the thing will need.
 <P>
 As you can see this can get very messy in a big hurry. Care should be taken when modifying templates.
<P> 
<TABLE BORDER=3 BGCOLOR="#C0C0C0"CELLPADDING=5>
<TR><TD><PRE>
thing	door                    linkid=10 <FONT COLOR="#FF0000">Thing #33 from World Things list</FONT>

33: sewerdoor       sewerdoor      	15.217214	19.028973	-7.384992	0.000000	0.000000	0.000000	368	thingflags=0x400448 numframes=2 frame=(15.217213/19.028973/-7.384992:0.000000/0.000000/0.000000) frame=(15.212876/19.028971/-7.399019:0.000000/0.000000/-179.947662) 
<B>(from World Thing list)</B>

sewerdoor        _walkstruct      model3d=dr13half.3do size=1.471634 movesize=1.471634 soundclass=lg_door.snd 
<B>(from World templates list)</B>

_walkstruct      _structure       thingflags=0x400048 
<B>(from World templates list)</B>

_structure       _decor           collide=3 thingflags=0x8 
<B>(from World templates list)</B>

_decor           none             orient=(0.000000/0.000000/0.000000) type=cog collide=1 move=path 
<B>(from World templates list)</B>
</PRE></TD></TR></TABLE>
<P>
<HR SIZE=2 WIDTH=200 Align=left>
<P>
<B>COG</B>
<P>
 In this case the assignment was another cog file, the symbol use is <B>nolink</B>  so the only reference in the code section you will see is pipedoorb.
<P>
<TABLE BORDER=3 BGCOLOR="#C0C0C0"CELLPADDING=5>
<TR><TD><PRE>
cog     pipedoorb                nolink <FONT COLOR="#FF0000">cog # 14 from Section : Cogs</FONT>

14:	09_pipedoor_b.cog	9548 9554 3937 3952 34 13 15 370 12.000000 3.920000 
(from section : Cogs)
</PRE></TD></TR></TABLE>
<P>
<HR SIZE=2 WIDTH=200 Align=left>
<P>
<B>SECTOR</B>
<p>
  Here again there is nolink so the symbol will only be refered to as doorsector. The cog was passed the actual sector number, and the sector it`s self has a flag indicating it is linked to a cog.In the code when you see <B>doorsector</B> being used for something this is the sector being queried or affected.
<P> 
<TABLE BORDER=3 BGCOLOR="#C0C0C0"CELLPADDING=5>
<TR><TD><PRE>
sector	doorsector               nolink <FONT COLOR="#FF0000">sector # 368 from  SECTION: SECTORS</FONT>


SECTOR	368           (sector number)
FLAGS	0x1004        (this flag indicates the sector is linked to a cog)
AMBIENT LIGHT	0.21
EXTRA LIGHT	0.70
COLORMAP	0
TINT	0.00	0.00	0.00
BOUNDBOX	13.749980 18.925011 -8.850015 16.649992 19.133007 -5.950003
COLLIDEBOX	14.174679 18.955471 -8.425318 16.225285 19.102547 -6.374711
SOUND	00rumbleamb04.wav 0.400000
CENTER	15.199986 19.029009 -7.400009
RADIUS	2.053253
VERTICES	64
...........~
(from Section: Sectors)
</PRE></TD></TR></TABLE>
<P>
<HR SIZE=2 WIDTH=70%>
<P>
<B>Flex</B>
<P>
In this example , the section :Cog passed the two values to movespeed and animtime, these happen to be the same as what is already specified in the cog , these could have been marked as <B>local</B> and left off the last two values in the section: cog line. In this case the Section: Cog  would overide the  cog file value.
<P> 
<TABLE BORDER=3 BGCOLOR="#C0C0C0"CELLPADDING=5>
<TR><TD><PRE>
flex    movespeed=12 <FONT COLOR="#FF0000">( The value 12.000000 )</FONT>
flex    animtime=3.92 <FONT COLOR="#FF0000">( The value 3.920000 )</FONT>

<FONT COLOR="#FF0000">13:	09_pipedoor_a.cog	9542 9536 3915 3412 33 14 15 368 12.000000 3.920000</FONT> 
</PRE></TD></TR></TABLE>
<P>
<BR>
<HR SIZE=2>

</body>
</html>
