<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>JediKnight Unofficial Specs</title>
<!-- generated by StealthJedi`s Autolink  -->
</head>

<body bgcolor="#FFFFFF" text="#000000" link="#0000EE"
vlink="#551A8B" alink="#FF0000">

<h1>Cog Files</h1>

<hr width="70%">

<p><a name="default"></a> <font size="4"><strong>Special Effects
Reference</strong></font> </p>

<p>These are special function verbs. </p>

<table border="3" cellpadding="5" bgcolor="#C0C0C0">
    <tr>
        <td><pre>
<a href="#jkDisableSaber">jkDisableSaber</a>
<a href="#jkEnableSaber">jkEnableSaber</a>
<a href="#jkEndTarGet">jkEndTarGet</a>
<a href="#jkSetPersuasionInfo">jkSetPersuasionInfo</a>
<a href="#jkSetSaberInfo">jkSetSaberInfo</a>
<a href="#jkSetTarGet">jkSetTarGet</a>
<a href="#jkSetTarGetColors">jkSetTarGetColors</a>
<a href="#AddDynamicAdd">AddDynamicAdd</a>
<a href="#AddDynamicTint">AddDynamicTint</a>
<a href="#AmputateJoint">AmputateJoint</a>
<a href="#ApplyForce">ApplyForce</a>
<a href="#ClearMapModeFlags">ClearMapModeFlags</a>
<a href="#CycleCamera">CycleCamera</a>
<a href="#DisableIrMode">DisableIrMode</a>
<a href="#EnableIrMode">EnableIrMode</a>
<a href="#FreeColorEffect">FreeColorEffect</a>
<a href="#GetCameraStateFlags">GetCameraStateFlags</a>
<a href="#GetCurrentCamera">GetCurrentCamera</a>
<a href="#GetMapModeFlags">GetMapModeFlags</a>
<a href="#GetSecondaryFocus">GetSecondaryFocus</a>
<a href="#ModifyColorEffect">ModifyColorEffect</a>
<a href="#SetCameraFocus">SetCameraFocus</a>
<a href="#SetCameraStateFlags">SetCameraStateFlags</a>
<a href="#SetCurrentCamera">SetCurrentCamera</a>
<a href="#SetMapModeFlags">SetMapModeFlags</a>
<a href="#SlideCeilingSky">SlideCeilingSky</a>
<a href="#SlideHorizonSky">SlideHorizonSky</a>
</pre>
        </td>
    </tr>
</table>

<hr align="left" width="200">

<p><a name="jkDisableSaber"></a> <b>jkDisableSaber()</b> </p>

<p>
Disables the saber from creating collisions.</p>

<p>
Use: jkDisableSaber(player);

<hr align="left" width="200">

<p><a name="jkEnableSaber"></a> <b>jkEnableSaber()</b> </p>

<p>Enables the saber blade to create collisions. Collisions
created <strong>ONLY</strong> when saber strikes</p>

<p>Use:
JkEnableSaber(player, flex damage, flex bladelength, flex stundelay);</p>

<hr align="left" width="200">

<p><a name="jkEndTarGet"></a> <b>jkEndTarGet()</b> </p>

<p>Voids the Force Power Process from working .</p>

<p>Use: jkEndTarget();</p>

<hr align="left" width="200">

<p><a name="jkSetPersuasionInfo"></a> <b>jkSetPersuasionInfo()</b>
</p>

<p>Adds the twinkling stars for Force Persuasion &amp; Force Jump</p>

<p>Use: JkSetPersuasionInfo(player, int1, int2); the Int's are the
min and max of the appearing twinkling stars.</p>

<hr align="left" width="200">

<p><a name="jkSetSaberInfo"></a> <b>jkSetSaberInfo()</b> </p>

<p>Used to set the Singleplayer saber information. </p>

<p>Use: jkSetSaberInfo(player, material Side mat, tip mat, flex base radius, 
flex tip radius, flex saber length, template wall hit, template flesh hit, 
template saber clash); We dont recomend changing the numbers specified
as they are pertinent to the saber's size.</p>

<hr align="left" width="200">

<p><a name="jkSetTarGet"></a> <b>jkSetTarGet()</b> </p>

<p>Sets the target for the force power reticle.</p>

<p>Use: JkSetTarget(victim);</p>

<hr align="left" width="200">

<p><a name="jkSetTarGetColors"></a> <b>jkSetTarGetColors()</b> </p>

<p>Sets the colors for the reticle while using a force power , 
such as pull.</p>

<p>Use: jkSetTargetColors(int, int, int); Where each int represents
a color from the JK pallete. Each int is for each line of the
reticle.</p>

<hr align="left" width="200">

<p><a name="AddDynamicAdd"></a> <b>AddDynamicAdd()</b> </p>

<p>This adds a tint (RGB value) to the screen. </p>

<p>Use: AddDynamicAdd(player, red int, green int, blue int); </p> ints are 0.. 255

<hr align="left" width="200">

<p><a name="AddDynamicTint"></a> <b>AddDynamicTint()</b> </p>

<p>Adds a flash of tint , used for weapon/powerup pickups in JK.</p>

<p>Use: AddDynamicTint(player, flex r, flex g, flex b);</p> flex 0.. 1.0

<hr align="left" width="200">

<p><a name="AmputateJoint"></a> <b>AmputateJoint()</b> </p>

<p>Literally amputates an enemy's joint and creates an arm thing.
Used in SP usually with a random command to keep it from
happening every time. </p>

<p>Use: AmputateJoint(victim, 5); Number is the joint number. 5 is an arm </p>

<p>
To create a new arm : newThing =CreateThingAtPos(limb, 
GetThingSector(victim), GetThingPos(victim), '0 0 0'); The limb's
template for a stormtrooper is: +stormlimb
<P>
See <A HREF="pup.htm#joint">PUP files</A> for Joint numbers
<P> 
<hr align="left" width="200">

<p><a name="ApplyForce"></a> <b>ApplyForce()</b> </p>

<p>Applies a vector for a weapon (conc rifle or raildet) or a
force power (force throw, force pull).</p>

<p>Use: ApplyForce(thing, direction vector); or
ApplyForce(thing, vectorscale(getthingvec(player), -80)); for
kickback</p>

<hr align="left" width="200">

<p><a name="ClearMapModeFlags"></a> <b>ClearMapModeFlags()</b> </p>

<p>Clears the Flags set by force seeing.</p>

<p>Use: ClearMapModeFlags(0xffff);</p>

<hr align="left" width="200">

<p><a name="CycleCamera"></a> <b>CycleCamera()</b> </p>

<p>Cycles Cameras in DarkJedi Cutscenes and when the saber is
pulled.</p>

<p>Use: CycleCamera();</p>

<hr align="left" width="200">

<p><a name="DisableIrMode"></a> <b>DisableIrMode()</b> </p>

<p>Shuts off the colors from IR goggles and Force Seeing</p>

<p>Use: DisableIrMode();</p>

<hr align="left" width="200">

<p><a name="EnableIrMode"></a> <b>EnableIrMode()</b> </p>

<p>Sets the mode for colors in IR and Force Seeing.</p>

<p>Use: EnableIrMode(flex, int); </p>

<hr align="left" width="200">

<p><a name="FreeColorEffect"></a> <b>FreeColorEffect()</b> </p>

<p>Sets the view color. (IR goggles, force seeing, blinded, etc)</p>

<p>Use: FreeColorEffect(int);</p>

<hr align="left" width="200">

<p><a name="GetCameraStateFlags"></a> <b>GetCameraStateFlags()</b>
</p>

<p>? </p>

<p>? Not Used in JK</p>

<hr align="left" width="200">

<p><a name="GetCurrentCamera"></a> <b>GetCurrentCamera()</b> </p>

<p>Gets the current camera in use. Stored as a thing . </p>

<p>Use: GetCurrentCamera(store_as_value); </p>

<hr align="left" width="200">

<p><a name="GetMapModeFlags"></a> <b>GetMapModeFlags()</b> </p>

<p>Gets the current flags set for the overlay map. Used in
force_seeing.cog.</p>

<p>Use: flags = GetMapModeFlags();</p>

<hr align="left" width="200">

<p><a name="GetSecondaryFocus"></a> <b>GetSecondaryFocus()</b> </p>

<p>Gets a second focus screen for a camera. It's Purpose is
Vague.</p>

<p>Use: GetSecondaryFocus(int_camera);</p>

<hr align="left" width="200">

<p><a name="ModifyColorEffect"></a> <b>ModifyColorEffect()</b> </p>

<p>Does some cool stuff with colors. Mixing, tinting, etc...</p>

<p>Use:
ModifyColorEffect(int_filterR, int_filterG, int_filterB, flex tintR, flex tintG, flex tintB, int_addR, int_addG, int_addB, flex fadeintensity);</p>

<hr align="left" width="200">

<p><a name="SetCameraFocus"></a> <b>SetCameraFocus()</b> </p>

<p>Changes the current view to the specified thing. </p>

<p>Use: SetCameraFocus(0, camera); </p>

<hr align="left" width="200">

<p><a name="SetCameraStateFlags"></a> <b>SetCameraStateFlags()</b>
</p>

<p>? </p>

<p>? Not Used in JK</p>

<hr align="left" width="200">

<p><a name="SetCurrentCamera"></a> <b>SetCurrentCamera()</b> </p>

<p>Sets the current camera Point of View.</p>

<p>Use: SetCurrentCamera(int);</p>

<hr align="left" width="200">

<p><a name="SetMapModeFlags"></a> <b>SetMapModeFlags()</b> </p>

<p>Used in ForceSeeing.cog to add the items in the map.</p>

<p>Use: SetMapModeFlags(flags); flags: 0xc=players, 0x1c=players, 
actors, items, 0x3c=players, actors, items, projectiles</p>

<hr align="left" width="200">
<p>
<a name="SlideCeilingSky"></a> <b>SlideCeilingSky()</b>
<p>
Scrolls all sky surfaces. (face flag 400)
<p>
Use: SlideCeilingSky( flex U, flex V); U , V  speeds to move along axis
<P>
<hr align="left" width="200">
<p>
<a name="SlideHorizonSky"></a> <b>SlideHorizonSky()</b> 
<p>
Scrolls all horizon surfaces. (face flag 200)
<p>
Use: SlideHorizonSky( flex U, flex  V ); U , V  speeds to move along axis
<p>
<br>
<hr>
</body>
</html>
