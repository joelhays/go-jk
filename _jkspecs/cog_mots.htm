<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>JediKnight Unofficial Specs</title>
<!-- generated by StealthJedi`s Autolink  -->
</head>

<body bgcolor="#FFFFFF" text="#000080" link="#0000EE"
vlink="#551A8B" alink="#FF0000">

<h1><font color="#000000">Mots Cog Files</font></h1>

<hr width="70%">

<p><a name="default"></a><font size="4"><strong> Mots Verb
Reference</strong></font></p>

<hr align="left" width="200">

<p>These are the Added cog verbs new in Mysteries of the Sith
expansion package. These are in addition to the ones available
for Jedi Knight. </p>

<table border="3" cellpadding="5" bgcolor="#C0C0C0">
    <tr>
        <td><pre>
<a href="#AIAddAlignmentPriority">AIAddAlignmentPriority</a>
<a href="#AIGetAlignment">AIGetAlignment</a>
<a href="#AIGetInterest">AIGetInterest</a>
<a href="#AIRemoveAlignmentPriority">AIRemoveAlignmentPriority</a>
<a href="#AISetAlignment">AISetAlignment</a>
<a href="#AISetDistractor">AISetDistractor</a>
<a href="#AISetInterest">AISetInterest</a>
<a href="#Break">Break</a>
<a href="#ChangeAllSectorslight">ChangeAllSectorslight</a>
<a href="#ClearCogFlags">ClearCogFlags</a>
<a href="#CreateThingAtPosOld">CreateThingAtPosOld</a>
<a href="#CreateThingAtPosOwner">CreateThingAtPosOwner</a>
<a href="#CreateThingLocal">CreateThingLocal</a>
<a href="#EnterBubble">EnterBubble</a>
<a href="#ExitBubble">ExitBubble</a>
<a href="#FindSectoratPos">FindSectoratPos</a>
<a href="#FireProjectileData">FireProjectileData</a>
<a href="#FireProjectileLocal">FireProjectileLocal</a>
<a href="#FirstThingInCone">FirstThingInCone</a>
<a href="#GetActionCog">GetActionCog</a>
<a href="#GetActorHeadPYR">GetActorHeadPYR</a>
<a href="#GetActorWeapon2">GetActorWeapon2</a>
<a href="#GetCogFlags">GetCogFlags</a>
<a href="#GetCurInvWeapon2">GetCurInvWeapon2</a>
<a href="#GetGuidThing">GetGuidThing</a>
<a href="#GetSectorAmbientLight">GetSectorAmbientLight</a>
<a href="#GetSurfaceVertexLight">GetSurfaceVertexLight</a>
<a href="#GetSurfaceVertexLightRGB">GetSurfaceVertexLightRGB</a>
<a href="#GetSysDate">GetSysDate</a>
<a href="#GetSysTime">GetSysTime</a>
<a href="#GetThingGuid">GetThingGuid</a>
<a href="#GetThingJointAngle">GetThingJointAngle</a>
<a href="#GetThingLvecPYR">GetThingLvecPYR</a>
<a href="#GetThingMaxAngularVelocity">GetThingMaxAngularVelocity</a>
<a href="#GetThingMaxVelocity">GetThingMaxVelocity</a>
<a href="#GetWeaponBin">GetWeaponBin</a>
<a href="#InterpolatePYR">InterpolatePYR</a>
<a href="#IsSphereInSector">IsSphereInSector</a>
<a href="#jkBeginCutscene">jkBeginCutscene</a>
<a href="#jkCreateBubble">jkCreateBubble</a>
<a href="#jkDestroyBubble">jkDestroyBubble</a>
<a href="#jkEndCutscene">jkEndCutscene</a>
<a href="#jkGetBubbleDistance">jkGetBubbleDistance</a>
<a href="#jkGetBubbleRadius">jkGetBubbleRadius</a>
<a href="#jkGetBubbleType">jkGetBubbleType</a>
<a href="#jkGetFirstBubble">jkGetFirstBubble</a>
<a href="#jkGetMultiParamInsideLeia">jkGetMultiParamInsideLeia</a>
<a href="#jkGetNextBubble">jkGetNextBubble</a>
<a href="#jkGetOpenFrames">jkGetOpenFrames</a>
<a href="#jkGetSaberSidemat">jkGetSaberSidemat</a>
<a href="#jkPrintUniVoice">jkPrintUniVoice</a>
<a href="#jkScreenShot">jkScreenShot</a>
<a href="#jkSetBubbleRadius">jkSetBubbleRadius</a>
<a href="#jkSetBubbleType">jkSetBubbleType</a>
<a href="#jkStartupCutscene">jkStartupCutscene</a>
<a href="#jkSyncForcePowers">jkSyncForcePowers</a>
<a href="#jkThingInBubble">jkThingInBubble</a>
<a href="#KillPlayerQuietly">KillPlayerQuietly</a>
<a href="#NextThingInCone">NextThingInCone</a>
<a href="#PlaySoundPosLocal">PlaySoundPosLocal</a>
<a href="#PlaySoundThingLocal">PlaySoundThingLocal</a>
<a href="#PlayVoiceGlobal">PlayVoiceGlobal</a>
<a href="#PlayVoiceLocal">PlayVoiceLocal</a>
<a href="#PlayVoicePos">PlayVoicePos</a>
<a href="#PlayVoiceThing">PlayVoiceThing</a>
<a href="#RadiusReturnex">RadiusReturnex </a>
<a href="#RotatePivot">RotatePivot</a>
<a href="#SetActionCog">SetActionCog</a>
<a href="#SetActorHeadPYR">SetActorHeadPYR</a>
<a href="#SetBitTest">SetBitTest</a>
<a href="#SetCameraZoom">SetCameraZoom</a>
<a href="#SetCogFlags">SetCogFlags</a>
<a href="#SetInvChangeInv">SetInvChangeInv</a>
<a href="#SetParamWorldFlash">SetParamWorldFlash</a>
<a href="#SetSectorAmbientLight">SetSectorAmbientLight</a>
<a href="#SetSlideHorizonSky">SetSlideHorizonSky</a>
<a href="#SetSurfaceVertexLight">SetSurfaceVertexLight</a>
<a href="#SetSurfaceVertexLightrgb">SetSurfaceVertexLightrgb</a>
<a href="#SetThingJointAngle">SetThingJointAngle</a>
<a href="#SetThinglookPYR">SetThinglookPYR</a>
<a href="#SetThingMaxAngularVelocity">SetThingMaxAngularVelocity</a>
<a href="#SetThingMaxHeadPitch">SetThingMaxHeadPitch</a>
<a href="#SetThingMaxVelocity">SetThingMaxVelocity</a>
<a href="#SetThingMinHeadPitch">SetThingMinHeadPitch</a>
<a href="#SetThingParent">SetThingParent</a>
<a href="#SetThingPosex">SetThingPosex</a>
<a href="#SetVectorLen">SetVectorLen</a>
<a href="#SetWeaponTarget">SetWeaponTarget</a>
<a href="#SleepPow">SleepPow</a>
<a href="#VectorEqual">VectorEqual</a>
<a href="#Wakeup">Wakeup</a>
</pre>
        </td>
    </tr>
</table>

<hr align="left" width="200">

<p><a name="AIAddAlignmentPriority"></a> <b>AIAddAlignmentPriority()</b>
</p>

<p>This adds the priority of the target's alignment.</p>

<p>Use: AIAddAlignmentPriority(flex,flex);</p>

<hr align="left" width="200">

<p><a name="AIGetAlignment"></a> <b>AIGetAlignment()</b> </p>

<p>Gets the current Alignment of a target.</p>

<p>Use: int = AIGetAlignment(thing_target);</p>

<hr align="left" width="200">

<p><a name="AIGetInterest"></a> <b>AIGetInterest()</b> </p>

<p>Gets an AI interest in a thing, but doesn't set the interest.</p>

<p>Use: thing = AIGetInterest(thing_interest);</p>

<hr align="left" width="200">

<p><a name="AIRemoveAlignmentPriority"></a> <b>AIRemoveAlignmentPriority()</b>
</p>

<p>Removes the Alignment setting.</p>

<p>Use: AIRemoveAlignmentPriority(int); int = -1 in most MOTS
cogs.</p>

<hr align="left" width="200">

<p><a name="AISetAlignment"></a> <b>AISetAlignment()</b> </p>

<p>Sets the AI alignment.</p>

<p>Use: AISetAlignment(victim,int_align);</p>

<hr align="left" width="200">

<p><a name="AISetDistractor"></a> <b>AISetDistractor()</b> </p>

<p>Sends the AI to be distracted by a thing.</p>

<p>Use: AISetDistractor(thing);</p>

<hr align="left" width="200">

<p><a name="AISetInterest"></a> <b>AISetInterest()</b> </p>

<p>Turns the AI actor towards a certain thing.</p>

<p>Use: AISetInterest(actor,target);</p>

<hr align="left" width="200">

<p><a name="Break"></a> <b>Break()</b> </p>

<p>Breaks the message.</p>

<p>Use: Break;</p>

<hr align="left" width="200">

<p><a name="ChangeAllSectorslight"></a> <b>ChangeAllSectorslight()</b>
</p>

<p>Changes the sector light value for <B>all</B> of the sectors in the level.</p>

<p>Use: ChangeAllSectorsLight(Int_LightValue);</p>

<hr align="left" width="200">

<p><a name="ClearCogFlags"></a> <b>ClearCogFlags()</b> </p>

<p>Clears the flags for a cog.</p>

<p>Use: ClearCogFlags(cog,flag);</p>

<hr align="left" width="200">

<p><a name="CreateThingAtPosOld"></a> <b>CreateThingAtPosOld()</b>
</p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="CreateThingAtPosOwner"></a> <b>CreateThingAtPosOwner()</b>
</p>

<p>Creates a thing at a pos, and sets the thing's parent to the source. </p>

<p>Use: CreateThingAtPosOwner(thing template,sector,thing position,pyr);? </p>

<hr align="left" width="200">

<p><a name="CreateThingLocal"></a> <b>CreateThingLocal()</b> </p>

<p>Creates a thing on a local system only.</p>

<p>Use: CreateThingLocal(thing template,thing position);</p>

<hr align="left" width="200">

<p><a name="EnterBubble"></a> <b>Message: EnterBubble</b> </p>

<p>This message is used to void force powers of usability when
the play is within the range of the KFY bubble.</p>

<p>Use: Standard Message use.</p>

<hr align="left" width="200">

<p><a name="ExitBubble"></a> <strong>Message: </strong><b>ExitBubble</b></p>

<p>This message returns force powers to normal after the play
exits the range of the KFY bubble.</p>

<p>Use: Standard message use.</p>

<hr align="left" width="200">

<p><a name="FindSectoratPos"></a> <b>FindSectoratPos()</b> </p>

<p>Fetches the sector of the inputted vector.</p>

<p>Use: FindSectoratPos(vec_pos);</p>

<hr align="left" width="200">

<p><a name="FireProjectileData"></a> <b>FireProjectileData()</b> </p>

<p>Sends the data <strong>ONLY </strong>of a projectile.</p>

<p>Used in railseek.cog</p>

<hr align="left" width="200">

<p><a name="FireProjectileLocal"></a> <b>FireProjectileLocal()</b>
</p>

<p>Fires a bullet on the local system. </p>

<p>Use: FireProjectileLocal(thing_launcher,tpl_proj,int,
vector,vector,flex,flags);</p>

<hr align="left" width="200">

<p><a name="FirstThingInCone"></a> <b>FirstThingInCone()</b> </p>

<p>Returns the first thing sighted within in a code.</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="GetActionCog"></a> <b>GetActionCog()</b> </p>

<p>Returns the current cog that responds to playeraction messages.</p>

<p>cog = GetActionCog(); </p>

<hr align="left" width="200">

<p><a name="GetActorHeadPYR"></a> <b>GetActorHeadPYR()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="GetActorWeapon2"></a> <b>GetActorWeapon2()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="GetCogFlags"></a> <b>GetCogFlags()</b> </p>

<p>Picks up the flags of a cog.</p>

<p>Use: GetCogFlags(cog);</p>

<hr align="left" width="200">

<p><a name="GetCurInvWeapon2"></a> <b>GetCurInvWeapon2()</b> </p>

<p>?Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="GetGuidThing"></a> <b>GetGuidThing()</b> </p>

<p>Returns a guaranteed unique ID of a thing.</p>

<p>intID = GetGuidThing(thingRef); </p>

<hr align="left" width="200">

<p><a name="GetSectorAmbientLight"></a> <b>GetSectorAmbientLight()</b>
</p>

<p>?Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="GetSurfaceVertexLight"></a> <b>GetSurfaceVertexLight()</b>
</p>

<p>Returns the light value of a vertex.</p>

<p>Use: flex_light = GetSurfaceVertexLight(surfacenum, vertexnum); </p>

<hr align="left" width="200">

<p><a name="GetSurfaceVertexLightRGB"></a> <b>GetSurfaceVertexLightRGB()</b>
</p>

<p>Returns the RGB value of a vertex</p>

<p>Use: vector_RGB = GetSurfaceVertexLightRGB(surfacenum, vertexnum); </p>

<hr align="left" width="200">

<p><a name="GetSysDate"></a> <b>GetSysDate()</b> </p>

<p>Returns a vector (day, month, year) according to the system clock.</p>

<p>Use: Vector_Date = GetSysDate(); </p>

<hr align="left" width="200">

<p><a name="GetSysTime"></a> <b>GetSysTime()</b> </p>

<p>Returns a vector (hour, minute, second) according to the system clock.</p>

<p>Use: Vector_Time = GetSysTime(); </p>

<hr align="left" width="200">

<p><a name="GetThingGuid"></a> <b>GetThingGuid()</b> </p>

<p>Does somethin' with the railseeker in mp.</p>

<p>Use: GetThingGuid(localplayer);</p>

<hr align="left" width="200">

<p><a name="GetThingJointAngle"></a> <b>GetThingJointAngle()</b> </p>

<p>Gets the Angle of a Thing's Joint. Used in Eweb.</p>

<p>Use: flex = GetThingJointAngle(thing,int_joint-num);</p>

<hr align="left" width="200">

<p><a name="GetThingLvecPYR"></a> <b>GetThingLvecPYR()</b> </p>

<p>Gets a thing's PYR (pitch, yaw, roll) vector. Used for
farsight and eweb.</p>

<p>Use: vector = GetThingLvecPYR(thing);</p>

<hr align="left" width="200">

<p><a name="GetThingMaxAngularVelocity"></a> <b>GetThingMaxAngularVelocity()</b>
</p>

<p>Returns the max angular velocity of a thing.</p>

<p>floatRef = GetThingMaxAngularVelocity(thingRef); </p>

<hr align="left" width="200">

<p><a name="GetThingMaxVelocity"></a> <b>GetThingMaxVelocity()</b>
</p>

<p>?Not Used in MOTS</p>

<p>?</p>

<hr align="left" width="200">

<p><a name="GetWeaponBin"></a> <b>GetWeaponBin()</b> </p>

<p>Gets the bin of something ( a weapon, preferibly :) )</p>

<p>Use: GetWeaponBin(player,int_bin-num,flex_unknown);</p>

<hr align="left" width="200">

<p><a name="InterpolatePYR"></a> <b>InterpolatePYR()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="IsSphereInSector"></a> <b>IsSphereInSector()</b> </p>

<p>Checks to find stuff in a sector. Used for ChainLightening.</p>

<p>Use: IsSphereInSector(vector_pos,flex_unknown,sector);</p>

<hr align="left" width="200">

<p><a name="jkBeginCutscene"></a> <b>jkBeginCutscene()</b> </p>

<p>Starts up an in Level Cutscene.</p>

<p>Use: jkBeginCutscene();</p>

<hr align="left" width="200">

<p><a name="jkCreateBubble"></a> <b>jkCreateBubble()</b> </p>

<p>Creates Bubble for KFY...</p>

<p>Use: jkCreateBubble(thing_bubble,flex,flex);</p>

<hr align="left" width="200">

<p><a name="jkDestroyBubble"></a> <b>jkDestroyBubble()</b> </p>

<p>Destroys the Bubble in KFY...</p>

<p>Use: jkDestroyBubble(thing_bubble);</p>

<hr align="left" width="200">

<p><a name="jkEndCutscene"></a> <b>jkEndCutscene()</b> </p>

<p>Ends an in level CutScene and allows the level to continue.</p>

<p>Use: jkEndCutscene();</p>

<hr align="left" width="200">

<p><a name="jkGetBubbleDistance"></a> <b>jkGetBubbleDistance()</b>
</p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="jkGetBubbleRadius"></a> <b>jkGetBubbleRadius()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="jkGetBubbleType"></a> <b>jkGetBubbleType()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="jkGetFirstBubble"></a> <b>jkGetFirstBubble()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="jkGetMultiParamInsideLeia"></a> <b>jkGetMultiParamInsideLeia()</b>
</p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="jkGetNextBubble"></a> <b>jkGetNextBubble()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="jkGetOpenFrames"></a> <b>jkGetOpenFrames()</b> </p>

<p>Gets the number of Frames used. </p>

<p>Use: jkGetOpenFrames(); on a pulse <strong>or </strong>if(jkGetOpenFrames()
&gt; int_framenum)</p>

<hr align="left" width="200">

<p><a name="jkGetSaberSidemat"></a> <b>jkGetSaberSidemat()</b> </p>

<p>Fetches the Side Mat of the saber. Used in Force_throw.cog</p>

<p>Use: sidemat = jkGetSaberSidemat(player);</p>

<hr align="left" width="200">

<p><a name="jkPrintUniVoice"></a> <b>jkPrintUniVoice()</b> </p>

<p>?Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="jkScreenShot"></a> <b>jkScreenShot()</b> </p>

<p>Takes a screenshot that will be dumped in your game directory.</p>

<p>Use: jkScreenShot(); </p>

<hr align="left" width="200">

<p><a name="jkSetBubbleRadius"></a> <b>jkSetBubbleRadius()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="jkSetBubbleType"></a> <b>jkSetBubbleType()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="jkStartupCutscene"></a> <b>jkStartupCutscene()</b> </p>

<p>Loads up a SAN cutscene without leaving the jkl.</p>

<p>Use: jkStartupCutscene(san);</p>

<hr align="left" width="200">

<p><a name="jkSyncForcePowers"></a> <b>jkSyncForcePowers()</b> </p>

<p>Syncs the Force Powers, used in endlevel.cog</p>

<p>Use: jkSyncForcePowers();</p>

<hr align="left" width="200">

<p><a name="jkThingInBubble"></a> <b>jkThingInBubble()</b> </p>

<p>? </p>

<p>? </p>

<hr align="left" width="200">

<p><a name="KillPlayerQuietly"></a> <b>KillPlayerQuietly()</b> </p>

<p>Kills the player without playing a sound</p>

<p>Use: KillPlayerQuietly();</p>

<hr align="left" width="200">

<p><a name="NextThingInCone"></a> <b>NextThingInCone()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="PlaySoundPosLocal"></a> <b>PlaySoundPosLocal()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="PlaySoundThingLocal"></a> <b>PlaySoundThingLocal()</b>
</p>

<p>Plays a Local sound that Emits from a thing.</p>

<p>Use:
PlaySoundThingLocal(wav,GetSenderRef(),flex_vol,dist,dist,flag); </p>

<hr align="left" width="200">

<p><a name="PlayVoiceGlobal"></a> <b>PlayVoiceGlobal()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="PlayVoiceLocal"></a> <b>PlayVoiceLocal()</b> </p>

<p>Plays a Voice Locally :-)</p>

<p>Use: PlayVoiceLocal(wav,flex,flex,flags);</p>

<hr align="left" width="200">

<p><a name="PlayVoicePos"></a> <b>PlayVoicePos()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="PlayVoiceThing"></a> <b>PlayVoiceThing()</b> </p>

<p>Plays a Voice(wav) from the sender.</p>

<p>Use: PlayVoiceThing(wav,GetSenderRef(),flex,flex,flex,flex);</p>

<hr align="left" width="200">

<p><a name="RadiusReturnex "></a> <b>RadiusReturnex()</b> </p>

<p>? NotUsed in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="RotatePivot"></a> <b>RotatePivot()</b> </p>

<p>Sets the thing to the position given in RotFrame. Then
rotates the relocated thing around it's center by the angle(s) given in
the PCH/YAW/ROL part of RotFrame. <BR> Note: The
PCH/YAW/ROL part of RotFrame is ignored, the orientation is set to 0/0/0</p>

<p>Use: RotatePivot(thing RotThing, int RotFrame, flex RotTime); </p>

<hr align="left" width="200">

<p><a name="SetActionCog"></a> <b>SetActionCog()</b> </p>

<p>Sets an action cog (responds to playeraction: )</p>

<p>Use: SetActionCog(cog,flags);<BR>
See Force_FarSight.cog
</p>

<hr align="left" width="200">

<p><a name="SetActorHeadPYR"></a> <b>SetActorHeadPYR()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="SetBitTest"></a> <b>SetBitTest()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="SetCameraZoom"></a> <b>SetCameraZoom()</b> </p>

<p>Used to Zoom in </p>

<p>Use: SetCameraZoom(flex,flex_magnification,flex);</p>

<hr align="left" width="200">

<p><a name="SetCogFlags"></a> <b>SetCogFlags()</b> </p>

<p>Sets the Flags of a cog.</p>

<p>Use: SetCogFlags(cog,flags);</p>

<hr align="left" width="200">

<p><a name="SetInvChangeInv"></a> <b>SetInvChangeInv()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="SetParamWorldFlash"></a> <b>SetParamWorldFlash()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="SetSectorAmbientLight"></a> <b>SetSectorAmbientLight()</b>
</p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="SetSlideHorizonSky"></a> <b>SetSlideHorizonSky()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="SetSurfaceVertexLight"></a> <b>SetSurfaceVertexLight()</b>
</p>

<p>Dynamically sets the light value for a vertex</p>

<p>Use: SetSurfaceVertexLight(surfacenum, vertexnum, flex_light); </p>

<hr align="left" width="200">

<p><a name="SetSurfaceVertexLightrgb"></a> <b>SetSurfaceVertexLightrgb()</b>
</p>

<p>Dynamically sets the Rgb for a vertex.</p>

<p>Use: SetSurfaceVertexLightRGB(surfacenum, vertexnum, vector_rgb);<BR>
Note: This will only work if the vertex already has an RGB value! </p>

<hr align="left" width="200">

<p><a name="SetThingJointAngle"></a> <b>SetThingJointAngle()</b> </p>

<p>Pitches a thing to a certain angle.</p>

<p>?</p>

<hr align="left" width="200">

<p><a name="SetThinglookPYR"></a> <b>SetThinglookPYR()</b> </p>

<p>Sets the Pitch, Yaw and Roll of looking views.</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="SetThingMaxAngularVelocity"></a> <b>SetThingMaxAngularVelocity()</b>
</p>

<p>Sets the Maximum Speed a thing can turn.</p>

<p>Use: SetThingMaxAngularVelocity(player,flex_speed);</p>

<hr align="left" width="200">

<p><a name="SetThingMaxHeadPitch"></a> <b>SetThingMaxHeadPitch()</b>
</p>

<p>Sets the Maximum Pitch the Player may tilt his head.</p>

<p>Use: MaxPitch = SetThingMaxHeadPitch(player,flex_pitch);</p>

<hr align="left" width="200">

<p><a name="SetThingMaxVelocity"></a> <b>SetThingMaxVelocity()</b>
</p>

<p>Sets the Maximum Speed something may travel.</p>

<p>Use: SetThingMaxVelocity(thing,Flex_speed);</p>

<hr align="left" width="200">

<p><a name="SetThingMinHeadPitch"></a> <b>SetThingMinHeadPitch()</b>
</p>

<p>Sets the Minimum Pitch the Player may tilt his head.</p>

<p>Use: MinPitch = SetThingMinHeadPitch(player,flex_pitch);</p>

<hr align="left" width="200">

<p><a name="SetThingParent"></a> <b>SetThingParent()</b> </p>

<p>Set's the parent of a thing. Used for multiplayer purposes so a killer can be assigned to a projectile.</p>

<p>Use: SetThingParent(thingRef, thingParent); </p>

<hr align="left" width="200">

<p><a name="SetThingPosex"></a> <b>SetThingPosex()</b> </p>

<p>Sets a thing (actor) to move towards another thing. Example:
Carbonite Statues.</p>

<p>Use: SetThingPosEx(GetSenderRef(),thing,thing);</p>

<hr align="left" width="200">

<p><a name="SetVectorLen"></a> <b>SetVectorLen()</b> </p>

<p>? </p>

<p>? </p>

<hr align="left" width="200">

<p><a name="SetWeaponTarget"></a> <b>SetWeaponTarget()</b> </p>

<p>Sets a target for a weapon, such as the seeking rail
detonator.</p>

<p>Use: SetWeaponTarget(param,param,flex_unknown);</p>

<hr align="left" width="200">

<p><a name="SleepPow"></a> <b>SleepPow()</b> </p>

<p>? Not Used in MOTS</p>

<p>? </p>

<hr align="left" width="200">

<p><a name="VectorEqual"></a> <b>VectorEqual()</b> </p>

<p>Checks the vector to make sure it is equal to what it formerly
was. Used as a failsafe for far-seeing and cameras.</p>

<p>Use: VectorEqual(vector_starting-pos,thing_playerpos); Used in
conjunction with GetThingPos();</p>

<p>2nd Use: if(!VectorEqual(vector_start-pos,
GetThingPos(player))) This method is the failsafe used by LEC.</p>

<hr align="left" width="200">

<p><a name="Wakeup"></a> <b>Wakeup()</b> </p>

<p>Wakes the player up after a cutscene?</p>

<p>Use: Wakeup();</p>

<p><br>
</p>

<hr>
</body>
</html>
