<HTML><HEAD><TITLE>JediKnight Unofficial Specs</TITLE></HEAD>
<!-- generated by StealthJedi`s Autolink  -->
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000EE" VLINK="#551A8B" ALINK="#FF0000">
<h1>Cog Files</h1>
<HR SIZE=2 WIDTH=70%>
<P><A NAME="default"></A>
<STRONG><FONT SIZE="+1">Thing Reference</FONT></STRONG>
<P>
Things can be a lot of stuff in JK, player,pickups,actors,etc. These are the verbs that work with them.
<P>
<TABLE BORDER=3 BGCOLOR="#C0C0C0"CELLPADDING=5><TR><TD><PRE>
<A HREF="#jkClearFlags">jkClearFlags</A>
<A HREF="#jkGetFlags">jkGetFlags</A>
<A HREF="#jkSetFlags">jkSetFlags</A>
<A HREF="#AddThingVel">AddThingVel</A>
<A HREF="#AttachThingtosurf">AttachThingtosurf</A>
<A HREF="#AttachThingtoThing">AttachThingtoThing</A>
<A HREF="#AttachThingtoThingex">AttachThingtoThingex</A>
<A HREF="#CaptureThing">CaptureThing</A>
<A HREF="#ClearExplosionFlags">ClearExplosionFlags</A>
<A HREF="#ClearItemFlags">ClearItemFlags</A>
<A HREF="#ClearParticleFlags">ClearParticleFlags</A>
<A HREF="#ClearPhysicsFlags">ClearPhysicsFlags</A>
<A HREF="#ClearThingAttachFlags">ClearThingAttachFlags</A>
<A HREF="#ClearThingFlags">ClearThingFlags</A>
<A HREF="#ClearTypeFlags">ClearTypeFlags</A>
<A HREF="#ClearWeaponFlags">ClearWeaponFlags</A>
<A HREF="#CreateThing">CreateThing</A>
<A HREF="#CreateThingatPos">CreateThingatPos</A>
<A HREF="#CreateThingatPosnr">CreateThingatPosnr</A>
<A HREF="#CreateThingnr">CreateThingnr</A>
<A HREF="#DamageThing">DamageThing</A>
<A HREF="#DestroyThing">DestroyThing</A>
<A HREF="#DetachThing">DetachThing</A>
<A HREF="#GetCollideType">GetCollideType</A>
<A HREF="#GetCurFrame">GetCurFrame</A>
<A HREF="#GetExplosionFlags">GetExplosionFlags</A>
<A HREF="#GetGoalFrame">GetGoalFrame</A>
<A HREF="#GetItemFlags">GetItemFlags</A>
<A HREF="#GetParticleFlags">GetParticleFlags</A>
<A HREF="#GetParticleGrowthSpeed">GetParticleGrowthSpeed</A>
<A HREF="#GetParticleSize">GetParticleSize</A>
<A HREF="#GetParticleTimeOutRate">GetParticleTimeOutRate</A>
<A HREF="#GetPhysicsFlags">GetPhysicsFlags</A>
<A HREF="#GetThingAttachFlags">GetThingAttachFlags</A>
<A HREF="#GetThingCaptureCog">GetThingCaptureCog</A>
<A HREF="#GetThingClassCog">GetThingClassCog</A>
<A HREF="#GetThingCollideSize">GetThingCollideSize</A>
<A HREF="#GetThingCurGeoMode">GetThingCurGeoMode</A>
<A HREF="#GetThingCurLightMode">GetThingCurLightMode</A>
<A HREF="#GetThingCurTexMode">GetThingCurTexMode</A>
<A HREF="#GetThingFireOffset">GetThingFireOffset</A>
<A HREF="#GetThingFlags">GetThingFlags</A>
<A HREF="#GetThingGeoMode">GetThingGeoMode</A>
<A HREF="#GetThinglight">GetThinglight</A>
<A HREF="#GetThingLightMode">GetThingLightMode</A>
<A HREF="#GetThingLVec">GetThingLVec</A>
<A HREF="#GetThingMass">GetThingMass</A>
<A HREF="#GetThingModel">GetThingModel</A>
<A HREF="#GetThingMoveSize">GetThingMoveSize</A>
<A HREF="#GetThingParent">GetThingParent</A>
<A HREF="#GetThingPos">GetThingPos</A>
<A HREF="#GetThingRespawn">GetThingRespawn</A>
<A HREF="#GetThingRotVel">GetThingRotVel</A>
<A HREF="#GetThingRVec">GetThingRVec</A>
<A HREF="#GetThingSector">GetThingSector</A>
<A HREF="#GetThingSignature">GetThingSignature</A>
<A HREF="#GetThingTemplate">GetThingTemplate</A>
<A HREF="#GetThingTexMode">GetThingTexMode</A>
<A HREF="#GetThingThrust">GetThingThrust</A>
<A HREF="#GetThingType">GetThingType</A>
<A HREF="#GetThingUserData">GetThingUserData</A>
<A HREF="#GetThingUVec">GetThingUVec</A>
<A HREF="#GetThingVel">GetThingVel</A>
<A HREF="#GetTypeFlags">GetTypeFlags</A>
<A HREF="#GetWeaponFlags">GetWeaponFlags</A>
<A HREF="#IsThingCrouching">IsThingCrouching</A>
<A HREF="#IsThingMoving">IsThingMoving</A>
<A HREF="#IsThingVisible">IsThingVisible</A>
<A HREF="#JumpToFrame">JumpToFrame</A>
<A HREF="#MoveToFrame">MoveToFrame</A>
<A HREF="#PathMovePause">PathMovePause</A>
<A HREF="#PathMoveResume">PathMoveResume</A>
<A HREF="#ReleaseThing">ReleaseThing</A>
<A HREF="#RotatePivot">RotatePivot</A>
<A HREF="#SetCollideType">SetCollideType</A>
<A HREF="#SetExplosionFlags">SetExplosionFlags</A>
<A HREF="#SetItemFlags">SetItemFlags</A>
<A HREF="#SetParticleFlags">SetParticleFlags</A>
<A HREF="#SetParticleGrowthSpeed">SetParticleGrowthSpeed</A>
<A HREF="#SetParticleSize">SetParticleSize</A>
<A HREF="#SetParticleTimeOutRate">SetParticleTimeOutRate</A>
<A HREF="#SetPhysicsFlags">SetPhysicsFlags</A>
<A HREF="#SetThingAttachFlags">SetThingAttachFlags</A>
<A HREF="#SetThingCaptureCog">SetThingCaptureCog</A>
<A HREF="#SetThingClassCog">SetThingClassCog</A>
<A HREF="#SetThingCollideSize">SetThingCollideSize</A>
<A HREF="#SetThingCurGeoMode">SetThingCurGeoMode</A>
<A HREF="#SetThingCurLightMode">SetThingCurLightMode</A>
<A HREF="#SetThingCurTexMode">SetThingCurTexMode</A>
<A HREF="#SetThingFireOffset">SetThingFireOffset</A>
<A HREF="#SetThingFlags">SetThingFlags</A>
<A HREF="#SetThingGeoMode">SetThingGeoMode</A>
<A HREF="#SetThingHealth">SetThingHealth</A>
<A HREF="#SetThingLight">SetThingLight</A>
<A HREF="#SetThingLightMode">SetThingLightMode</A>
<A HREF="#SetThingLook">SetThingLook</A>
<A HREF="#SetThingMass">SetThingMass</A>
<A HREF="#SetThingModel">SetThingModel</A>
<A HREF="#SetThingMoveSize">SetThingMoveSize</A>
<A HREF="#SetThingPos">SetThingPos</A>
<A HREF="#SetThingPulse">SetThingPulse</A>
<A HREF="#SetThingRotVel">SetThingRotVel</A>
<A HREF="#SetThingTexMode">SetThingTexMode</A>
<A HREF="#SetThingThrust">SetThingThrust</A>
<A HREF="#SetThingTimer">SetThingTimer</A>
<A HREF="#SetThingType">SetThingType</A>
<A HREF="#SetThingUserData">SetThingUserData</A>
<A HREF="#SetThingVel">SetThingVel</A>
<A HREF="#SetTypeFlags">SetTypeFlags</A>
<A HREF="#SetWeaponFlags">SetWeaponFlags</A>
<A HREF="#SkipToFrame">SkipToFrame</A>
<A HREF="#StopThing">StopThing</A>
<A HREF="#TeleportThing">TeleportThing</A>
<A HREF="#WaitForStop">WaitForStop</A>
</PRE></TD></TR></TABLE>
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="jkClearFlags"></A>
<B>jkClearFlags()</B> Control
<P>
Clears the specified jk flags.<A HREF="cog_flags.htm#jk_flags"> JK Flags</A>
<P>
Use: jkClearFlags(thing,flags);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="jkGetFlags"></A>
<B>jkGetFlags()</B> Info
<P>
Gets the  jk flags.<A HREF="cog_flags.htm#jk_flags"> JK Flags</A>
<P>
Use: flags = jkGetFlags(thing); returns set flags
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="jkSetFlags"></A>
<B>jkSetFlags()</B> Control
<P>
Sets the specified jk flags.<A HREF="cog_flags.htm#jk_flags"> JK Flags</A>
<P>
Use: jkSetFlags(thing,flags);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="AddThingVel"></A>
<B>AddThingVel()</B>
<P>
?
<P>
? not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="AttachThingtosurf"></A>
<B>AttachThingtosurf()</B>
<P>
?
<P>
? not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="AttachThingtoThing"></A>
<B>AttachThingtoThing()</B> Control
<P>
Attaches a thing to a thing.
<P>
Use: AttachThingtoThing(thing1,thing2);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="AttachThingtoThingex"></A>
<B>AttachThingtoThingEx()</B> Control
<P>
Attaches thing to thing  with an optional flag.<A HREF="cog_flags.htm#attach_flags"> Attach Flags</A>  
<P>
Use: AttachThingtoThingEx(thing1,thing2,flag);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="CaptureThing"></A>
<B>CaptureThing()</B> Control
<P>
 Redirects  created thing messages to calling cog.
<P>
Use: CaptureThing(thing); Used in conjunction with <A HREF="#ReleaseThing"> ReleaseThing</A>
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="ClearExplosionFlags"></A>
<B>ClearExplosionFlags()</B>
<P>
Clears the specified explosion flags.
<P>
? not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="ClearItemFlags"></A>
<B>ClearItemFlags()</B> Control
<P>
Clears the specified item Flags. <A HREF="cog_flags.htm#item_flags"> Item Flags</A> 
<P>
Use: ClearItemFlags(flag); not used ,not sure
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="ClearParticleFlags"></A>
<B>ClearParticleFlags()</B>
<P>
?
<P>
? Not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="ClearPhysicsFlags"></A>
<B>ClearPhysicsFlags()</B> Control
<P>
Clears specified physics flags. <A HREF="cog_flags.htm#physics_flags"> Physics Flags</A> 
<P>
Use: ClearPhysicsFlags(thing,flags);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="ClearThingAttachFlags"></A>
<B>ClearThingAttachFlags()</B> Control
<P>
 Clears specified attach flags. <A HREF="cog_flags.htm#attach_flags"> Attach Flags</A>
<P>
 Use: ClearThingAttachFlags(thing,flags);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="ClearThingFlags"></A>
<B>ClearThingFlags()</B> Control
<P>
Clears specified Thing Flags<A HREF="cog_flags.htm#thing_flags"> Thing Flags</A>
<P>
Use: ClearThingFlags(thing,flags);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="ClearTypeFlags"></A>
<B>ClearTypeFlags()</B>
<P>
?
<P>
? Not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="ClearWeaponFlags"></A>
<B>ClearWeaponFlags()</B> Control
<P>
Clears specified weapon flags.  <A HREF="cog_flags.htm#weapon_flags"> Weapon Flags</A>
<P>
Use:  ClearWeaponFlags(thing,flag);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="CreateThing"></A>
<B>CreateThing()</B> Control
<P>
Creates a thing.
<P>
Use: CreateThing(thing template,thing position);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="CreateThingatPos"></A>
<B>CreateThingatPos()</B> Control
<P>
Create a thing at specified position
<P>
Use: CreateThingatPos(thing template,sector,thing position,pyr); pyr = pitch ,roll,yaw (vector)
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="CreateThingatPosnr"></A>
<B>CreateThingatPosnr()</B> Control
<P>
Create a thing at specified position
<P>
Use: CreateThingatPosNr(thing template,sector,thing position,pyr); pyr = pitch ,roll,yaw (vector)
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="CreateThingnr"></A>
<B>CreateThingnr()</B> Control
<P>
Create thing.
<P>
Use: CreateThingnr(thing template,?)
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="DamageThing"></A>
<B>DamageThing()</B> Control
<P>
Damages a thing.
<P>
Use: damage = DamageThing(thing,flex damage,flag,damage causething); returns amount of damage taken
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="DestroyThing"></A>
<B>DestroyThing()</B> Control
<P>
Removes a thing from game.
<P>
Use:  DestroyThing(thing);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="DetachThing"></A>
<B>DetachThing()</B> Control
<P>
Detach a thing from a surface or another thing.
<P>
Use: DetachThing(Thing);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetCollideType"></A>
<B>GetCollideType()</B> Info
<P>
Gets the Collide type flags . <A HREF="cog_flags.htm#collide_flags"> Collide Type Flags</A>
<P>
Use: type = GetCollideType(thing); returns int ,not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetCurFrame"></A>
<B>GetCurFrame()</B> Info
<P>
Gets the current Frame of a moving thing.
<P>
Use: frame = GetCurFrame(thing); returns int
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetExplosionFlags"></A>
<B>GetExplosionFlags()</B>
<P>
?
<P>
? not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetGoalFrame"></A>
<B>GetGoalFrame()</B>
<P>
?
<P>
?
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetItemFlags"></A>
<B>GetItemFlags()</B> Control
<P>
Gets the item  Flags. <A HREF="cog_flags.htm#item_flags"> Item Flags</A> 
<P>
Use: GetItemFlags(thing); 
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetParticleFlags"></A>
<B>GetParticleFlags()</B> Info
<P>
Gets the thing particle flags
<P>
Use: Int = GetParticleFlags(thing); returns int  ,Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetParticleGrowthSpeed"></A>
<B>GetParticleGrowthSpeed()</B> Info
<P>
Gets the particle thing growth speed.
<P>
Use: flex = GetParticleGrowthSpeed(thing); returns flex  ,not used in cogs , not sure
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetParticleSize"></A>
<B>GetParticleSize()</B>
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetParticleTimeOutRate"></A>
<B>GetParticleTimeOutRate()</B>
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetPhysicsFlags"></A>
<B>GetPhysicsFlags()</B> Control
<P>
Gets thing physics flags. <A HREF="cog_flags.htm#physics_flags"> Physics Flags</A> 
<P>
Use: flag = GetPhysicsFlags(thing); returns int
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingAttachFlags"></A>
<B>GetThingAttachFlags()</B>
<P>
 Gets thing attach flags. <A HREF="cog_flags.htm#attach_flags"> Attach Flags</A>
<P>
 Use: flag = GetThingAttachFlags(thing); returns int
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingCaptureCog"></A>
<B>GetThingCaptureCog()</B>
<P>
?
<P>
? Not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingClassCog"></A>
<B>GetThingClassCog()</B> Info
<P>
Gets the cog of thing
<P>
Use: cog = GetThingClassCog(thing);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingCollideSize"></A>
<B>GetThingCollideSize()</B>
<P>
?
<P>
? Not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingCurGeoMode"></A>
<B>GetThingCurGeoMode()</B> Info
<P>
Gets the thing  current geometry mode . <A HREF="cog_flags.htm#geomode_flags">  Geomerty Mode Flags</A>
<P>
Use: Flags = GetThingCurGeoMode(thing); returns int
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingCurLightMode"></A>
<B>GetThingCurLightMode()</B> Info
<P>
?
<P>
? Not used.
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingCurTexMode"></A>
<B>GetThingCurTexMode()</B>
<P>
?
<P>
? not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingFireOffset"></A>
<B>GetThingFireOffset()</B>
<P>
?
<P>
? not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingFlags"></A>
<B>GetThingFlags()</B> Info
<P>
Gets Thing Flags <A HREF="cog_flags.htm#thing_flags"> Thing Flags</A>
<P>
Use:  flag = GetThingFlags(thing); returns int representing flags
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingGeoMode"></A>
<B>GetThingGeoMode()</B> Info
<P>
Gets the thing  geometry mode . <A HREF="cog_flags.htm#geomode_flags">  Geomerty Mode Flags</A>
<P>
Use: Flags = GetThingCurGeoMode(thing); returns int
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThinglight"></A>
<B>GetThinglight()</B> Info
<P>
Gets the thing light value.
<P>
Use: light = GetThinglight(thing);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingLightMode"></A>
<B>GetThingLightMode()</B>
<P>
?
<P>
? not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingLVec"></A>
<B>GetThingLVec()</B> Info
<P>
Gets the vector thing is looking at.
<P>
Use: vector = GetThingLVec(thing); returns vector
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingMass"></A>
<B>GetThingMass()</B> Info
<P>
Gets the Mass of a thing.
<P>
Use: mass = GetThingMass(thing); returns flex
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingModel"></A>
<B>GetThingModel()</B> Info
<P>
Gets the thing 3do.
<P>
Use: Looks = GetThingModel(thing); returns a model
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingMoveSize"></A>
<B>GetThingMoveSize()</B>
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingParent"></A>
<B>GetThingParent()</B> Info
<P>
Gets the parent thing of a thing
<P>
Use: thing = GetThingParent(thing);returns a thing
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingPos"></A>
<B>GetThingPos()</B> Info
<P>
Gets the Position of a thing
<P>
Use: vector = GetThingPos(thing); returns a vector
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingRespawn"></A>
<B>GetThingRespawn	()</B> Info
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingRotVel"></A>
<B>GetThingRotVel()</B> Info
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingRVec"></A>
<B>GetThingRVec()</B> Info 
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingSector"></A>
<B>GetThingSector()</B> Info
<P>
Gets the thing sector.
<P>
Use: sector = GetThingSector(thing); returns sector reference
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingSignature"></A>
<B>GetThingSignature()</B> Info
<P>
 Gets the signature of thing (unique thing number)
<P>
Use:  Int = GetThingSignature(thing); returns an int
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingTemplate"></A>
<B>GetThingTemplate()</B> Info
<P>
Gets the thing template. <A HREF="jkl.htm#s_temp"> JKL Section: TEMPLATES</A>
<P>
Use: template = GetThingTemplate(thing); returns a template
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingTexMode"></A>
<B>GetThingTexMode()</B> Info
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingThrust"></A>
<B>GetThingThrust()</B> Info 
<P>
Gets the thing thrust (velocity)
<P>
Use: vector = GetThingThrust(thing); returns vector
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingType"></A>
<B>GetThingType()</B> Info
<P>
Gets the thing type. <A HREF="cog_flags.htm#thing_type_flags"> Thing Types</A>
<P>
Use: int = GetThingType(thing); returns int
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingUserData"></A>
<B>GetThingUserData()</B>
<P>
?
<P>
?
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingUVec"></A>
<B>GetThingUVec()</B>
<P>
Gets the thing up vector.
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetThingVel"></A>
<B>GetThingVel()</B> Info
<P>
Gets the thing velocity.
<P>
Use: vector = GetThingVel(thing); returns a vector
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetTypeFlags"></A>
<B>GetTypeFlags()</B>
<P>
?
<P>
? Not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="GetWeaponFlags"></A>
<B>GetWeaponFlags()</B> Info
<P>
Get thing weapon flags.  <A HREF="cog_flags.htm#weapon_flags"> weapon Flags</A>
<P>
Use: flag = GetWeaponFlags(thing); returns int
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="IsThingCrouching"></A>
<B>IsThingCrouching()</B>
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="IsThingMoving"></A>
<B>IsThingMoving()</B> Info
<P>
Is the thing moving . 
<P>
Use: Int = IsThingMoving(Thing); retuns 0 if not moving , non 0 if moving
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="IsThingVisible"></A>
<B>IsThingVisible()</B> Info
<P>
Checks to see if thing is visible
<P>
User:  int = IsThingVisible(thing); returns 0 if not visible.
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="JumpToFrame"></A>
<B>JumpToFrame()</B> Control
<P>
jumps an object to one of its frames
<P>
Use: JumptoFrame(thing,int frame,sector); 
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="MoveToFrame"></A>
<B>MoveToFrame()</B> Control
<P>
moves an object to one of its frames
<P>
Use: MoveToFrame(thing,int frame,flex speed);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="PathMovePause"></A>
<B>PathMovePause()</B>
<P>
?
<P>
?
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="PathMoveResume"></A>
<B>PathMoveResume()</B>
<P>
?
<P>
?
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="ReleaseThing"></A>
<B>ReleaseThing()</B>
<P>
Releases thing from use (the calling cog is no longer called). Used in conjunction with CaptureThing();
<P>
Use: ReleaseThing(ThingRef);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="RotatePivot"></A>
<B>RotatePivot()</B>
<P>
Rotates the thing specified by RotThing in a time (in seconds) given in
RotTime. The center of rotation is specified by the X/Y/Z part of the
frame with number RotFrame of the thing. The PCH/YAW/ROL part of that
frame defines direction and angle of rotation. A negative value in
RotTime inverses the direction of rotation.
<P>
Use: RotatePivot(thing RotThing, int RotFrame, flex RotTime);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetCollideType"></A>
<B>SetCollideType()</B>
<P>
Sets the specified Collide type flags . <A HREF="cog_flags.htm#collide_flags"> Collide Type Flags</A>
<P>
Use:  GetCollideType(thing,flag); 
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetExplosionFlags"></A>
<B>SetExplosionFlags()</B>
<P>
?
<P>
? not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetItemFlags"></A>
<B>SetItemFlags()</B> Control
<P>
Sets the specified item Flags. <A HREF="cog_flags.htm#item_flags"> Item Flags</A> 
<P>
Use: SetItemFlags(thing,flag); not used ,not sure
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetParticleFlags"></A>
<B>SetParticleFlags()</B> Control
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetParticleGrowthSpeed"></A>
<B>SetParticleGrowthSpeed()</B> Control
<P>
Sets the particle Growth speed .
<P>
Use: SetParticleGrowthSpeed(thing,flex);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetParticleSize"></A>
<B>SetParticleSize()</B>
<P>
?
<P>
? not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetParticleTimeOutRate"></A>
<B>SetParticleTimeOutRate()</B>
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetPhysicsFlags"></A>
<B>SetPhysicsFlags()</B> Control
<P>
Sets specified physics flags. <A HREF="cog_flags.htm#physics_flags"> Physics Flags</A> 
<P>
Use: SetPhysicsFlags(thing,flags);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingAttachFlags"></A>
<B>SetThingAttachFlags()</B> Control
<P>
 Sets specified attach flags. <A HREF="cog_flags.htm#attach_flags"> Attach Flags</A>
<P>
 Use: SetThingAttachFlags(thing,flags);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingCaptureCog"></A>
<B>SetThingCaptureCog()</B>
<P>
?
<P>
?
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingClassCog"></A>
<B>SetThingClassCog()</B>
<P>
?
<P>
?
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingCollideSize"></A>
<B>SetThingCollideSize()</B>
<P>
?
<P>
? Not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingCurGeoMode"></A>
<B>SetThingCurGeoMode()</B> Control
<P>
Sets the thing current geometry mode . <A HREF="cog_flags.htm#geomode_flags">  Geometry Mode Flags</A>
<P>
Use: SetThingCurGeoMode(thing,mode);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingCurLightMode"></A>
<B>SetThingCurLightMode()</B>
<P>
?
<P>
? Not used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingCurTexMode"></A>
<B>SetThingCurTexMode()</B>
<P>
?
<P>
? NOt used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingFireOffset"></A>
<B>SetThingFireOffset()</B> Control
<P>
Sets a fire offset for a thing.
<P>
Use: SetThingfireOffset(thing,vector);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingFlags"></A>
<B>SetThingFlags()</B> Control
<P>
Sets specified Thing Flags<A HREF="cog_flags.htm#thing_flags"> Thing Flags</A>
<P>
Use: SetThingFlags(thing,flags);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingGeoMode"></A>
<B>SetThingGeoMode()</B> Control
<P>
Sets the specified thing  geometry mode flags. <A HREF="cog_flags.htm#geomode_flags">  Geometry Mode Flags</A>
<P>
Use: SetThingGeoMode(thing,flag); 
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingHealth"></A>
<B>SetThingHealth()</B> Control
<P>
Sets the things health.
<P>
Use: SetThingHealth(thing,Int); Player max=100
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingLight"></A>
<B>SetThingLight()</B> Control
<P>
Sets a thing light value.
<P>
Use: SetThingLight(thing,int);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingLightMode"></A>
<B>SetThingLightMode()</B>
<P>
?
<P>
? not used 
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingLook"></A>
<B>SetThingLook()</B> Control
<P>
Sets the look vector of a thing.
<P>
Use: SetThingLook(thing,vector);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingMass"></A>
<B>SetThingMass()</B> Control
<P>
Sets the thing Mass.
<P>
Use: SetThingMass(thing,flex);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingModel"></A>
<B>SetThingModel()</B> Control
<P>
Set Thing model.
<P>
Use: SetThingModel(thing,model);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingMoveSize"></A>
<B>SetThingMoveSize()</B>
<P>
?
<P>
? Not used in cogs
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingPos"></A>
<B>SetThingPos()</B> Control
<P>
Sets the things position
<P>
Use: SetThingPos(thing,vector);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingPulse"></A>
<B>SetThingPulse()</B>
<P>
?
<P>
?
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingRotVel"></A>
<B>SetThingRotVel()</B> Control
<P>
Sets thing rotation velocity
<P>
Use: SetThingRotVel(thing,vector);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingTexMode"></A>
<B>SetThingTexMode()</B> Control
<P>
?
<P>
? NOt Used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingThrust"></A>
<B>SetThingThrust()</B>
<P>
?
<P>
? Not Used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingTimer"></A>
<B>SetThingTimer()</B>
<P>
?
<P>
?
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingType"></A>
<B>SetThingType()</B>
<P>
?
<P>
? NOt Used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingUserData"></A>
<B>SetThingUserData()</B>
<P>
Sets a things User Data (health)
<P>
use: SetThingUserData(thing, intHealth);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetThingVel"></A>
<B>SetThingVel()</B> Control
<P>
Sets a things velocity
<P>
Use: SetThingVel(thing,vector);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetTypeFlags"></A>
<B>SetTypeFlags()</B>
<P>
?
<P>
? Not Used
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SetWeaponFlags"></A>
<B>SetWeaponFlags()</B> Control
<P>
Sets specified weapon flags.  <A HREF="cog_flags.htm#weapon_flags"> Weapon Flags</A>
<P>
Use:  SetWeaponFlags(thing,flag);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="SkipToFrame"></A>
<B>SkipToFrame()</B> Control
<P>
Skips an object to one of its frames
<P>
Use: SkipToFrame(thing,int frame,speed int);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="StopThing"></A>
<B>StopThing()</B> Control
<P>
Stops a thing movement.
<P>
Use: StopThing(thing);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="TeleportThing"></A>
<B>TeleportThing()</B> Control
<P>
teleports a thing to another things location
<P>
Use: TeleportThing(thing,thing);
<P>
<HR Size=2 WIDTH=200 Align=left>
<P>
<A NAME="WaitForStop"></A>
<B>WaitForStop()</B> Control
<P>
Waits for a thing to stop before continuing
<P>
Use: WaitForStop(thing);
<P><BR><HR SIZE=2></BODY></HTML>
